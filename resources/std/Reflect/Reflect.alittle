
namespace ALittle;

// 协议结构
public struct StructInfo
{
    string name;                 // 带命名域的结构体名
    string ns_name;              // 所在命名域名
    string rl_name;              // 实际名
    int hash_code;               // 对name进行计算的哈希值
    List<string> name_list;      // 变量名列表
    List<string> type_list;      // 变量类型列表
}

private auto __all_name_struct = new Map<string, StructInfo>();
private auto __all_id_struct = new Map<int, StructInfo>();
protected static RegStruct(int hash, string name, StructInfo info)
{
    if (__all_name_struct[name] != null)
        return;
    StructInfo old_info = __all_id_struct[hash];
    if (old_info != null)
    {
        Error("RegReflect 名字为"..name.."和名字为"..old_info.name.."哈希值冲突");
        return;
    }
    __all_name_struct[name] = info;
    __all_id_struct[hash] = info;
}

protected static FindStructByName(string name) : StructInfo
{
    return __all_name_struct[name];
}

protected static FindStructById(int id) : StructInfo
{
    return __all_id_struct[id];
}
